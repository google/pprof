name: ci
on: 
  push:
  pull_request:
jobs:
  test-linux-and-mac:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        go: ['1.13', '1.14']
        os: ['ubuntu-latest', 'macos-latest']
    env:
      GOPATH: ${{ github.workspace }}
      WORKING_DIR: ./src/github.com/${{ github.repository }}
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIR }}
    steps:
      - name: Update go version
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go }}

      - name: Checkout the repo
        uses: actions/checkout@v2
        with:
          path: ${{ env.WORKING_DIR }}

      - name: Fetch Linux dependencies
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: sudo apt-get install graphviz

      - name: Fetch macOS dependencies
        if: ${{ matrix.os == 'macos-latest' }}
        run: brew install graphviz

      - name: Fetch common dependencies
        # Do not let tools interfere with the main module's go.mod.
        env: 
          GO111MODULE: off         
        run: go get -u golang.org/x/lint/golint honnef.co/go/tools/cmd/...

      - name: Run the script 
        run: |
          gofmtdiff=$(gofmt -s -d .) && if [ -n "$gofmtdiff" ]; then printf 'gofmt -s found:\n%s\n' "$gofmtdiff" && exit 1; fi
          golintlint=$(golint ./...) && if [ -n "$golintlint" ]; then printf 'golint found:\n%s\n' "$golintlint" && exit 1; fi
          go vet -all ./...
          ./test.sh

      - name: Check to make sure that tests also work in GOPATH mode
        env: 
          GO111MODULE: off
        run: |
          go get -d .
          go test -v ./...

      - name: Code coverage
        uses: codecov/codecov-action@v1
        with:
          file: ./coverage.txt

  test-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        go: ['1.13', '1.14']
    env:
      GOPATH: ${{ github.workspace }}
      WORKING_DIR: ./src/github.com/${{ github.repository }}
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIR }}
    steps:
      - name: Update go version
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go }}

      - name: Checkout the repo
        uses: actions/checkout@v2
        with:
          path: ${{ env.WORKING_DIR }}

      - name: Fetch Windows dependency
        uses: crazy-max/ghaction-chocolatey@v1
        with:
          args: install graphviz

      - name: Run the test
        run: |
          go env
          go build github.com/google/pprof
          go test -v ./...



        
