name: ci
on:
  push:
    branches:
      - main
  pull_request:
  schedule:
    - cron: '0 2 * * *' # Run every day, at 2AM UTC.
env:
  GOPATH: ${{ github.workspace }}
  WORKING_DIR: ./src/github.com/google/pprof/
jobs:
  test-mac:
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIR }}
    strategy:
      fail-fast: false
      matrix:
        go: ['1.19', '1.20', 'tip']
        # Supported macOS versions can be found in
        # https://github.com/actions/virtual-environments#available-environments.
        os: ['macos-11', 'macos-12']
        # Supported Xcode versions for macOS 11 can be found in
        # https://github.com/actions/virtual-environments/blob/main/images/macos/macos-11-Readme.md#xcode
        # Supported Xcode versions for macOS 12 can be found in
        # https://github.com/actions/virtual-environments/blob/main/images/macos/macos-12-Readme.md#xcode
        xcode-version: ['14.2', '14.1', '14.0.1', '13.4.1', '13.3.1', '13.2.1', '13.1', '13.0', '12.5.1', '12.4', '11.7']
        exclude:
        - os: 'macos-11'
          xcode-version: '13.3.1'
        - os: 'macos-11'
          xcode-version: '13.4.1'
        - os: 'macos-11'
          xcode-version: '14.0.1'
        - os: 'macos-11'
          xcode-version: '14.1'
        - os: 'macos-11'
          xcode-version: '14.2'
        - os: 'macos-12'
          xcode-version: '11.7'
        - os: 'macos-12'
          xcode-version: '12.4'
        - os: 'macos-12'
          xcode-version: '12.5.1'
        - os: 'macos-12'
          xcode-version: '13.0'
    steps:
      - name: Update Go version using setup-go
        uses: actions/setup-go@fac708d6674e30b6ba41289acaab6d4b75aa0753 # v4.0.1
        if: matrix.go != 'tip'
        with:
          go-version: ${{ matrix.go }}

      - name: Update Go version manually
        if: matrix.go == 'tip'
        working-directory: ${{ github.workspace }}
        run: |
          git clone https://go.googlesource.com/go $HOME/gotip
          cd $HOME/gotip/src
          ./make.bash
          echo "GOROOT=$HOME/gotip" >> $GITHUB_ENV
          echo "RUN_STATICCHECK=false" >> $GITHUB_ENV
          echo "RUN_GOLANGCI_LINTER=false" >> $GITHUB_ENV
          echo "$HOME/gotip/bin:$PATH" >> $GITHUB_PATH

      - name: Checkout the repo
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3
        with:
          path: ${{ env.WORKING_DIR }}

      - name: Set up Xcode
        uses: maxim-lobanov/setup-xcode@9a697e2b393340c3cacd97468baa318e4c883d98 # v1.5.1
        with:
          xcode-version: ${{ matrix.xcode-version }}

      - name: Fetch dependencies
        run: |
          brew install graphviz
          # Do not let tools interfere with the main module's go.mod.
          cd && go mod init tools
          # TODO: Update to a specific version when https://github.com/dominikh/go-tools/issues/1362 is fixed.
          go install honnef.co/go/tools/cmd/staticcheck@master
          go install github.com/golangci/golangci-lint/cmd/golangci-lint@v1.51.0
          # Add PATH for installed tools.
          echo "$GOPATH/bin:$PATH" >> $GITHUB_PATH

      - name: Run the script
        run: |
          go version
          ./test.sh

      - name: Check to make sure that tests also work in GOPATH mode
        env:
          GO111MODULE: off
        run: |
          go get -d .
          go test -v ./...

      - name: Code coverage
        uses: codecov/codecov-action@eaaf4bedf32dbdc6b720b63067d99c4d77d6047d # v3.1.4
        with:
          file: ${{ env.WORKING_DIR }}/coverage.txt

  test-linux:
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIR }}
    strategy:
      fail-fast: false
      matrix:
        go: ['1.19', '1.20', 'tip']
        os: ['ubuntu-22.04', 'ubuntu-20.04']
    steps:
      - name: Update Go version using setup-go
        uses: actions/setup-go@fac708d6674e30b6ba41289acaab6d4b75aa0753 # v4.0.1
        if: matrix.go != 'tip'
        with:
          go-version: ${{ matrix.go }}

      - name: Update Go version manually
        if: matrix.go == 'tip'
        working-directory: ${{ github.workspace }}
        run: |
          git clone https://go.googlesource.com/go $HOME/gotip
          cd $HOME/gotip/src
          ./make.bash
          echo "GOROOT=$HOME/gotip" >> $GITHUB_ENV
          echo "RUN_STATICCHECK=false" >> $GITHUB_ENV
          echo "RUN_GOLANGCI_LINTER=false" >> $GITHUB_ENV
          echo "$HOME/gotip/bin" >> $GITHUB_PATH

      - name: Checkout the repo
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3
        with:
          path: ${{ env.WORKING_DIR }}

      - name: Fetch dependencies
        run: |
          sudo apt-get install graphviz
          # Do not let tools interfere with the main module's go.mod.
          cd && go mod init tools
          # TODO: Update to a specific version when https://github.com/dominikh/go-tools/issues/1362 is fixed.
          go install honnef.co/go/tools/cmd/staticcheck@master
          go install github.com/golangci/golangci-lint/cmd/golangci-lint@v1.51.0
          # Add PATH for installed tools.
          echo "$GOPATH/bin:$PATH" >> $GITHUB_PATH

      - name: Run the script
        run: |
          go version
          ./test.sh

      - name: Check to make sure that tests also work in GOPATH mode
        env:
          GO111MODULE: off
        run: |
          go get -d .
          go test -v ./...

      - name: Code coverage
        uses: codecov/codecov-action@eaaf4bedf32dbdc6b720b63067d99c4d77d6047d # v3.1.4
        with:
          file: ${{ env.WORKING_DIR }}/coverage.txt

  test-windows:
    runs-on: windows-2019
    strategy:
      fail-fast: false
      matrix:
        go: ['1.19', '1.20']
    steps:
      - name: Update Go version using setup-go
        uses: actions/setup-go@fac708d6674e30b6ba41289acaab6d4b75aa0753 # v4.0.1
        with:
          go-version: ${{ matrix.go }}

      - name: Checkout the repo
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3
        with:
          path: ${{ env.WORKING_DIR }}

      - name: Fetch Windows dependency
        uses: crazy-max/ghaction-chocolatey@5a5864861ce2c988001531e48993aa687c51f6c8 # v2.2.0
        with:
          args: install graphviz llvm

      - name: Run the test
        run: |
          go version
          # This is a workaround to make graphviz installed through choco work.
          # It generates a config file to tell dot what layout engine and
          # format types are available. See
          # https://github.com/google/pprof/issues/585 for more details.
          dot -c
          go env
          go build github.com/google/pprof
          go test -v ./...
        working-directory: ${{ env.WORKING_DIR }}

  check:
    if: always()
    runs-on: ubuntu-latest
    needs:
    - test-mac
    - test-linux
    - test-windows
    steps:
    - name: Decide whether the needed jobs succeeded or failed
      uses: re-actors/alls-green@05ac9388f0aebcb5727afa17fcccfecd6f8ec5fe # v1.2.2
      with:
        jobs: ${{ toJSON(needs) }}
